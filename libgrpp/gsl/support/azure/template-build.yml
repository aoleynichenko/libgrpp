parameters:
- name: name  
  default: ''
- name: vmImage
  default: ''
- name: cmakeDefs
  displayName: 'Define architecture of the build'
  type: string
- name: installGCC32
  type: boolean
  default: false
- name: archiveExtension
  type: "string"
  displayName: "cpack archive generated files extension"
- name: cpackParameters
  type: "string"

jobs:
- job: ${{parameters.name}}
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:
  - ${{ if eq(parameters.installGCC32, true)}}:
    - bash: |
        sudo apt update
        sudo apt install -y g++-multilib gcc-multilib
  - checkout: self
    submodules: true
  - task: CMake@1
    inputs:
        workingDirectory: 'build' 
        cmakeArgs: .. ${{ parameters.cmakeDefs }}
    displayName: "Configure with cmake"
  - task: CMake@1
    inputs:
        workingDirectory: 'build' 
        cmakeArgs: --build . --config Release
    displayName: "Build with cmake"
  - script: 'ctest -C Release'
    workingDirectory: 'build' 
    displayName: 'Running tests'
  - bash: cpack %{{paremeters.cpackParameters}}
    workingDirectory: 'build'
    displayName: "Creating packages"
  - bash: |
        for file in amplgsl-amplgsl*; do mv "$file" "${file#amplgsl-}"; done;
    workingDirectory: 'build'
    displayName: "Rename artifact"
  - task: CopyFiles@2
    inputs:
      sourceFolder: 'build'
      contents: 'amplgsl.*.${{parameters.archiveExtension}}'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: "Copying amplgsl artifact to staging directory"
  - publish: '$(Build.ArtifactStagingDirectory)'
    artifact: amplgsl.${{parameters.name}}
    displayName: "Publishing artifacts"
    
